import type { RemoteComponentType, PropsForRemoteComponent } from '@remote-ui/core';
import type { Node } from '../types';
type PropsFromNode<T> = NonNullable<T> extends Node<infer U> ? U : never;
declare global {
    namespace jest {
        interface Matchers<R, T = {}> {
            toHaveRemoteProps(props: Partial<PropsFromNode<T>>): void;
            toContainRemoteComponent<Type extends RemoteComponentType<string, any, any>>(type: Type, props?: Partial<PropsForRemoteComponent<Type>>): void;
            toContainRemoteComponentTimes<Type extends RemoteComponentType<string, any, any>>(type: Type, times: number, props?: Partial<PropsForRemoteComponent<Type>>): void;
            toContainRemoteText(text: string): void;
        }
    }
}
export {};
//# sourceMappingURL=index.d.ts.map