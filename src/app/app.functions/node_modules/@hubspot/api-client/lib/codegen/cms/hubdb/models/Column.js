"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColumnTypeEnum = exports.Column = void 0;
class Column {
    static getAttributeTypeMap() {
        return Column.attributeTypeMap;
    }
    constructor() {
    }
}
exports.Column = Column;
Column.discriminator = undefined;
Column.attributeTypeMap = [
    {
        "name": "createdByUserId",
        "baseName": "createdByUserId",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "foreignTableId",
        "baseName": "foreignTableId",
        "type": "number",
        "format": "int64"
    },
    {
        "name": "updatedBy",
        "baseName": "updatedBy",
        "type": "SimpleUser",
        "format": ""
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string",
        "format": ""
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string",
        "format": ""
    },
    {
        "name": "updatedByUserId",
        "baseName": "updatedByUserId",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "ColumnTypeEnum",
        "format": ""
    },
    {
        "name": "optionCount",
        "baseName": "optionCount",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "foreignIds",
        "baseName": "foreignIds",
        "type": "Array<ForeignId>",
        "format": ""
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "deleted",
        "baseName": "deleted",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "createdBy",
        "baseName": "createdBy",
        "type": "SimpleUser",
        "format": ""
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string",
        "format": ""
    },
    {
        "name": "options",
        "baseName": "options",
        "type": "Array<Option>",
        "format": ""
    },
    {
        "name": "width",
        "baseName": "width",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string",
        "format": ""
    },
    {
        "name": "foreignIdsById",
        "baseName": "foreignIdsById",
        "type": "{ [key: string]: ForeignId; }",
        "format": ""
    },
    {
        "name": "foreignColumnId",
        "baseName": "foreignColumnId",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "foreignIdsByName",
        "baseName": "foreignIdsByName",
        "type": "{ [key: string]: ForeignId; }",
        "format": ""
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "Date",
        "format": "date-time"
    }
];
var ColumnTypeEnum;
(function (ColumnTypeEnum) {
    ColumnTypeEnum["Null"] = "NULL";
    ColumnTypeEnum["Text"] = "TEXT";
    ColumnTypeEnum["Number"] = "NUMBER";
    ColumnTypeEnum["Url"] = "URL";
    ColumnTypeEnum["Image"] = "IMAGE";
    ColumnTypeEnum["Select"] = "SELECT";
    ColumnTypeEnum["Multiselect"] = "MULTISELECT";
    ColumnTypeEnum["Boolean"] = "BOOLEAN";
    ColumnTypeEnum["Location"] = "LOCATION";
    ColumnTypeEnum["Date"] = "DATE";
    ColumnTypeEnum["Datetime"] = "DATETIME";
    ColumnTypeEnum["Currency"] = "CURRENCY";
    ColumnTypeEnum["Richtext"] = "RICHTEXT";
    ColumnTypeEnum["ForeignId"] = "FOREIGN_ID";
    ColumnTypeEnum["Video"] = "VIDEO";
    ColumnTypeEnum["Cta"] = "CTA";
    ColumnTypeEnum["File"] = "FILE";
    ColumnTypeEnum["Json"] = "JSON";
    ColumnTypeEnum["Composite"] = "COMPOSITE";
    ColumnTypeEnum["Code"] = "CODE";
})(ColumnTypeEnum = exports.ColumnTypeEnum || (exports.ColumnTypeEnum = {}));
//# sourceMappingURL=Column.js.map