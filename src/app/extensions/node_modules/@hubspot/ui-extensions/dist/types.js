export class ExtensionEvent {
    type;
    bubbles;
    timeStamp;
    id;
    constructor(event) {
        this.bubbles = event.bubbles;
        this.type = event.type;
        this.timeStamp = event.timeStamp;
        this.id = crypto.randomUUID();
    }
}
export class FormSubmitExtensionEvent extends ExtensionEvent {
    targetValue;
    constructor(value, event) {
        super(event);
        this.targetValue = value;
    }
}
export const chartFieldTypes = {
    datetime: 'datetime',
    linear: 'linear',
    category: 'category',
};
export const iconNames = {
    success: 'success',
    remove: 'remove',
    add: 'add',
    attach: 'attach',
    date: 'date',
    copy: 'duplicate',
    delete: 'delete',
    edit: 'edit',
    email: 'email',
    exclamation: 'exclamation',
    question: 'question',
    home: 'home',
    location: 'location',
    upCarat: 'upCarat',
    downCarat: 'downCarat',
    warning: 'warning',
    shoppingCart: 'cart',
    clock: 'time',
    comment: 'comments',
    contact: 'contacts',
    star: 'favorite',
    file: 'file',
    reports: 'reports',
    video: 'video',
    robot: 'simpleBot',
    refresh: 'refresh',
    faceHappy: 'emoji',
    faceNeutral: 'emojiLineNeutral',
    faceSad: 'emojiLineSad',
    upload: 'upload',
    download: 'download',
    left: 'left',
    right: 'right',
    dataSync: 'dataSync',
    imageGallery: 'imageGallery',
    search: 'search',
    save: 'saveEditableView',
    notification: 'notification',
    bulb: 'bulb',
    settings: 'settings',
    filter: 'filter',
    gauge: 'gauge',
    enroll: 'enroll',
    generateChart: 'generateChart',
    gift: 'gift',
    flame: 'highlyEngagedLead',
    inbox: 'inbox',
    image: 'insertImage',
    quote: 'insertQuote',
    insertVideo: 'insertVideo',
    invoice: 'invoice',
    key: 'key',
    book: 'knowledgeBase',
    globe: 'language',
    lesson: 'lesson',
    link: 'link',
    listView: 'listView',
    locked: 'locked',
    mention: 'mention',
    messages: 'messages',
    mobile: 'mobile',
    notificationOff: 'notificationOff',
    hash: 'numericDataType',
    objectAssociations: 'objectAssociations',
    objectAssociationsManyToMany: 'objectAssociationsManyToMany',
    objectAssociationsManyToOne: 'objectAssociationsManyToOne',
    office365: 'office365',
    order: 'order',
    paymentSubscriptions: 'paymentSubscriptions',
    product: 'product',
    powerPointFile: 'powerPointFile',
    presentation: 'presentation',
    publish: 'publish',
    questionAnswer: 'questionAnswer',
    quickbooks: 'quickbooks',
    readMore: 'readMore',
    realEstateListing: 'realEstateListing',
    readOnlyView: 'readOnlyView',
    recentlySelected: 'recentlySelected',
    record: 'record',
    redo: 'redo',
    undo: 'undo',
    registration: 'registration',
    replace: 'replace',
    rotate: 'rotate',
    salesQuote: 'salesQuote',
    salesTemplates: 'salesTemplates',
    sequences: 'sequences',
    spellCheck: 'spellCheck',
    strike: 'strike',
    tablet: 'tablet',
    tag: 'tag',
    tasks: 'tasks',
    test: 'test',
    ticket: 'ticket',
    thumbsUp: 'thumbsUp',
    thumbsDown: 'thumbsDown',
    translate: 'translate',
    trophy: 'trophy',
    videoFile: 'videoFile',
    videoPlayerSubtitles: 'videoPlayerSubtitles',
    view: 'view',
    viewDetails: 'viewDetails',
    website: 'website',
    workflows: 'workflows',
    zoomIn: 'zoomIn',
    zoomOut: 'zoomOut',
    goal: 'goal',
    campaigns: 'campaigns',
    cap: 'cap',
    block: 'block',
    bank: 'bank',
    approvals: 'approvals',
    appointment: 'appointment',
    facebook: 'socialBlockFacebook',
    googlePlus: 'socialBlockGoogleplus',
    instagram: 'socialBlockInstagram',
    linkedin: 'socialBlockLinkedin',
    pinterest: 'socialBlockPinterest',
    rss: 'socialBlockRss',
    twitter: 'socialBlockTwitter',
    x: 'socialBlockX',
    xing: 'socialBlockXing',
    youtube: 'socialBlockYoutube',
    youtubePlay: 'socialBlockYoutubeplay',
    sortAlpAsc: 'sortAlpAsc',
    sortAlpDesc: 'sortAlpDesc',
    sortAmtAsc: 'sortAmtAsc',
    sortAmtDesc: 'sortAmtDesc',
    sortNumAsc: 'sortNumAsc',
    sortNumDesc: 'sortNumDesc',
    sortTableAsc: 'sortTableAsc',
    sortTableDesc: 'sortTableDesc',
    text: 'text',
    textColor: 'textColor',
    textDataType: 'textDataType',
    textSnippet: 'textSnippet',
    calling: 'calling',
    callingHangup: 'callingHangup',
    callingMade: 'callingMade',
    callingMissed: 'callingMissed',
    callingVoicemail: 'callingVoicemail',
    faceHappyFilled: 'emojiFillHappy',
    faceNeutralFilled: 'emojiFillNeutral',
    faceSadFilled: 'emojiFillSad',
};
/**
 * @category Serverless
 */
export var ServerlessExecutionStatus;
(function (ServerlessExecutionStatus) {
    ServerlessExecutionStatus["Success"] = "SUCCESS";
    ServerlessExecutionStatus["Error"] = "ERROR";
})(ServerlessExecutionStatus || (ServerlessExecutionStatus = {}));
export const EXTENSION_POINT_LOCATIONS = [
    'crm.preview',
    'crm.record.sidebar',
    'crm.record.tab',
    'helpdesk.sidebar',
    'uie.playground.middle',
    'settings',
];
/** @deprecated use ExtensionEvent/FormSubmitExtensionEvent instead */
export class RemoteEvent {
    type;
    bubbles;
    timeStamp;
    targetValue;
    constructor(value, event) {
        this.bubbles = event.bubbles;
        this.type = event.type;
        this.timeStamp = event.timeStamp;
        this.targetValue = value;
    }
}
