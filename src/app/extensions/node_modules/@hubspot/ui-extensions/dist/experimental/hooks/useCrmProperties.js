import { useEffect } from 'react';
import { createPropertyManager } from '../crm/propertyManager';
import { logger } from '../../logger';
/**
 * A hook for using and managing CRM properties.
 *
 * @experimental This hook is experimental and might change or be removed in future versions.
 */
export function useCrmProperties(actions, properties, callback, onUpdate) {
    useEffect(() => {
        logger.warn('useCrmProperties is an experimental hook and might change or be removed in the future.');
    }, []);
    useEffect(() => {
        const propertyManager = createPropertyManager(actions);
        return propertyManager.initializePropertyMonitoring(properties, (props) => callback(props), (props) => callback(props));
    }, [actions, properties, callback, onUpdate]);
    // Return the refresh function
    const propertyManager = createPropertyManager(actions);
    return {
        onPropertyChanged: propertyManager.refreshProperties,
    };
}
